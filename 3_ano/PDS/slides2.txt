	GRASP
General Responsability Assignment Software Patterns 
. Principios fundamentais do design de objetos e responsabilidade

Principios:

. creator - quem cria? (se b contem A, se b tem a info para iniciar a, se b guarda a, se b usa a)
. information expert - quem tem a responsabilidade x? (à classe que tem a info necessária à responsabilidade)
. low coupling - criar poucas dependências
. high cohesion - como manter classes focadas e geríveis (uma responsabilidade a cada classe)
. controller - quem controla eventos da UI? (criar handler)
. polimorfismo - diferentes comportamentos são usados baseado no tipo de objeto (shape area)
. pure fabrication - escolher objeto que faça mais sentido conforme especifidades
. Indirection - Definir responsabildades a objetos diferentes
. protected variations - identificar pontos onde pode ocorrer erros e definir responsabilidades de modo a criar uma interfaec estável há volta dos mesmos (dont talk to strangers)

