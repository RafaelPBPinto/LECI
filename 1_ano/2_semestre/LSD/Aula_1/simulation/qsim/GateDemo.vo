// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "03/22/2021 13:34:08"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module GateDemo (
	led_0,
	in_0,
	in_1);
output 	led_0;
input 	in_0;
input 	in_1;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \led_0~output_o ;
wire \in_0~input_o ;
wire \in_1~input_o ;
wire \and_0~combout ;


cycloneive_io_obuf \led_0~output (
	.i(\and_0~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led_0~output_o ),
	.obar());
// synopsys translate_off
defparam \led_0~output .bus_hold = "false";
defparam \led_0~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \in_0~input (
	.i(in_0),
	.ibar(gnd),
	.o(\in_0~input_o ));
// synopsys translate_off
defparam \in_0~input .bus_hold = "false";
defparam \in_0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \in_1~input (
	.i(in_1),
	.ibar(gnd),
	.o(\in_1~input_o ));
// synopsys translate_off
defparam \in_1~input .bus_hold = "false";
defparam \in_1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb and_0(
// Equation(s):
// \and_0~combout  = (\in_0~input_o  & \in_1~input_o )

	.dataa(\in_0~input_o ),
	.datab(\in_1~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\and_0~combout ),
	.cout());
// synopsys translate_off
defparam and_0.lut_mask = 16'h8888;
defparam and_0.sum_lutc_input = "datac";
// synopsys translate_on

assign led_0 = \led_0~output_o ;

endmodule
